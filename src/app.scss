@use "theme";
@use "layout";

@use "resources/components/shop-footer/shop-footer";
@use "resources/components/navigation-bar/navigation-bar";
@use '@material/ripple/mdc-ripple';
@use "@material/ripple";

@use '@material/typography/mdc-typography';
@use '@material/typography';

@use "@material/layout-grid/mdc-layout-grid";
@use "@aurelia-mdc-web/layout-grid";

@use '@material/button/mdc-button';

@use '@material/circular-progress/mdc-circular-progress';

@use '@material/dialog/mdc-dialog';
@use '@material/dialog';

@use "@material/textfield/mdc-text-field";
@use "@material/textfield/_index" as textfield;
@use "@material/form-field/_index" as form-field;
@use "@aurelia-mdc-web/text-field" as AuTextField;

@import "node_modules/bootstrap/scss/bootstrap";
@import "node_modules/bootstrap/scss/mixins";
@import "node_modules/bootstrap/scss/variables";



$pb-main-content : 5rem;

.shop-app-container {
}

.shop-app-container > router-view {
    padding-bottom : $pb-main-content;
    display        : block;
    min-height     : calc(100vh - #{shop-footer.$section-height-desktop} - #{navigation-bar.$height-desktop});
}

.backdrop {
    background-image : url("./img/bg-earth.jpg");
    background-size  : cover;
    width            : 100vw;
    height           : 100vh;
    position         : fixed;
    top              : 0;
    left             : 0;
    z-index          : -1;
}

.form-control:focus {
    border-color       : inherit;
    -webkit-box-shadow : none;
    box-shadow         : none;
}

.shipment-logo {
    display       : block;
    width         : 100%;
    max-width     : 90px;
    border-radius : 4px;
}

.shop-ripple {
    @include ripple.surface;
    @include ripple.radius-bounded;
    @include ripple.states;
    overflow : hidden !important;
}

.mdc-icon--spinning {
    $duration                 : 1000ms;

    animation-name            : spin;
    animation-timing-function : ease-in-out;
    animation-iteration-count : infinite;
    animation-duration        : $duration;
}

@keyframes spin {
    from {
        transform : rotate(0deg);
    }
    to {
        transform : rotate(360deg);
    }
}

